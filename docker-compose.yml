services:
  fe-app:
    build:
      context: ./example-react-fe
      dockerfile: Dockerfile
    ports: 
      - "3000:3000"
    networks:
      - keycloak-network
    volumes:
      - ./example-react-fe:/usr/src

  fe-api:
    image: keycloak/fe-api
    build: ./frontend-api
    ports: 
      - "3001:3001"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://fe-api:3001"]
    #   interval: 10s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 60s
    networks:
      - keycloak-network
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  keycloak:
    # image: jboss/keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    ports:
      - "8080:8080"
    networks:
      - keycloak-network
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_HEALTH_ENABLED=true
      # - KC_DB=mysql
      # - KC_DB_URL=http://mysql:3306
      # - KC_DB_USERNAME=keycloak
      # - KC_DB_PASSWORD=keycloak
    command: start-dev
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      keycloak-mysql:
        condition: service_healthy
        restart: true
    
  keycloak-mysql:
    image: mysql:5.7
    networks:
      - keycloak-network
    environment:
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
      MYSQL_RANDOM_ROOT_PASSWORD: "1"
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-ukeycloak", "-pkeycloak"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  terraform:
    build:
      context: ./terraform
      dockerfile: Dockerfile
    # command: "plan -out=tfplan -input=false && terraform apply -input=false tfplan"
    networks:
      - keycloak-network
    volumes:
      - ./terraform:/usr/src
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

networks:
  keycloak-network:
    driver: bridge
    ipam:
      driver: default
